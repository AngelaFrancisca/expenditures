package pt.ist.expenditureTrackingSystem.domain;


valueType org.joda.time.DateTime as DateTime;
valueType pt.ist.expenditureTrackingSystem.domain.util.ByteArray as ByteArray;
valueType pt.ist.expenditureTrackingSystem.domain.util.MonitaryValue as MonitaryValue;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.AcquisitionProcessStateType as AcquisitionProcessStateType;
enum pt.ist.expenditureTrackingSystem.domain.authorizations.AuthorizationType as AuthorizationType;
/*valueType pt.ist.expenditureTrackingSystem.domain.util.Address as Address;*/
enum pt.ist.expenditureTrackingSystem.domain.RoleType as RoleType;


class ExpenditureTrackingSystem {
}

class processes.GenericProcess {
	String ojbConcreteClass;
}

class acquisitions.AcquisitionProcess extends processes.GenericProcess {
	String fundAllocationId;
	DateTime fundAllocationExpirationDate;
}

class acquisitions.AcquisitionProcessState {
	AcquisitionProcessStateType acquisitionProcessStateType;
	DateTime whenDateTime;
}

class acquisitions.AcquisitionRequest {
	String project;
	String subproject;
	String recipient;
	String receptionAddress;
}

class acquisitions.AcquisitionRequestItem {
	String description;
	Integer quantity;
	//MonitaryValue unitValue;
	BigDecimal unitValue;
	String proposalReference;
	String salesCode;              // CVP
}

class acquisitions.UnitItem {
	Boolean itemApproved;
	BigDecimal shareValue;
}

class processes.GenericLog {
	String ojbConcreteClass;
	DateTime whenOperationWasRan;
	String operation;
}

class acquisitions.OperationLog extends processes.GenericLog {
	AcquisitionProcessStateType state;
}

class authorizations.Authorization {
	AuthorizationType authorizationType;
	Boolean canDelegate;
}

	class authorizations.DelegatedAuthorization extends authorizations.Authorization {
	}

class File {
	String ojbConcreteClass;
	String filename;
	ByteArray content;
	String contentType;
}

	class acquisitions.AcquisitionProposalDocument extends File {
	}

	class acquisitions.Invoice extends File {
		String invoiceNumber;
		DateTime invoiceDate;
	}
	
	class acquisitions.AcquisitionRequestDocument extends File {
		Integer requestNumber;
	}
	

class Options {
	Boolean displayAuthorizationPending;
	Boolean recurseAuthorizationPendingUnits;
}

class organization.Person {
	String name;
	String username;
	String password;
}

class organization.Unit {
	String name;
	String costCenter;
}

class organization.Supplier {
	String name;
	String fiscalIdentificationCode;
	String address;
	String phone;
	String fax;
	String email;
}

class Role {
	RoleType roleType;
}

relation ExpenditureTrackingSystemGenericProcess {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	processes.GenericProcess playsRole processes {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemAcquisitionRequest {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.AcquisitionRequest playsRole acquisitionRequests {
		multiplicity *;
	}
}

relation AcquisitionProcessAcquisitionRequest {
	acquisitions.AcquisitionProcess playsRole acquisitionProcess;
	acquisitions.AcquisitionRequest playsRole acquisitionRequest;
}

relation ExpenditureTrackingSystemAcquisitionRequestItem {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.AcquisitionRequestItem playsRole acquisitionRequestItems {
		multiplicity *;
	}
}

relation AcquisitionRequestAcquisitionRequestItem {
	acquisitions.AcquisitionRequest playsRole acquisitionRequest;
	acquisitions.AcquisitionRequestItem playsRole acquisitionRequestItems {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemFile {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	File playsRole files {
		multiplicity *;
	}
}

relation AcquisitionRequestAcquisitionProposalDocument {
	acquisitions.AcquisitionRequest playsRole acquisitionRequest;
	acquisitions.AcquisitionProposalDocument playsRole acquisitionProposalDocument;
}

relation AcquisitionRequestAcquisitionRequestDocument {
	acquisitions.AcquisitionRequest playsRole acquisitionRequest ;
	acquisitions.AcquisitionRequestDocument playsRole acquisitionRequestDocument;
}

relation AcquisitionRequestInvoice {
	acquisitions.AcquisitionRequest playsRole acquisitionRequest;
	acquisitions.Invoice playsRole invoice;
}

relation ExpenditureTrackingSystemPerson {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.Person playsRole people {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemUnit {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.Unit playsRole units {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemTopLevelUnits {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemFromTopLevelUnit;
	organization.Unit playsRole topLevelUnits {
		multiplicity *;
	}
}

relation UnitUnit {
	organization.Unit playsRole parentUnit;
	organization.Unit playsRole subUnits {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemAuthorization {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	authorizations.Authorization playsRole authorizations {
		multiplicity *;
	}
}

relation UnitAuthorization {
	organization.Unit playsRole unit;
	authorizations.Authorization playsRole authorizations {
		multiplicity *;
	}
}

relation PersonAuthorization {
	organization.Person playsRole person;
	authorizations.Authorization playsRole authorizations {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemOptions {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	Options playsRole options {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemSuppliers {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.Supplier playsRole suppliers {
		multiplicity *;
	}
}

relation PersonOptions {
	organization.Person playsRole person;
	Options playsRole options;
}

relation ExpenditureTrackingSystemRole {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	Role playsRole roles {
		multiplicity *;
	}
}

relation PersonRole {
	organization.Person playsRole person {
		multiplicity *;
	}
	Role playsRole roles {
		multiplicity *;
	}
} 

relation AcquisitionRequestSupplier {
	acquisitions.AcquisitionRequest playsRole acquisitionRequests {
		multiplicity *;
	}
	organization.Supplier playsRole supplier;
}

relation AcquisitionRequestRequester {
	organization.Person playsRole requester;
	acquisitions.AcquisitionRequest playsRole acquisitionRequests {
		multiplicity *;
	}
}

relation AcquisitionProcessStatePerson {
	organization.Person playsRole who;
	acquisitions.AcquisitionProcessState playsRole acquisitionProcessStates {
		multiplicity *;
	}
}

relation AcquisitionProcessStateAcquisitionProcess {
	acquisitions.AcquisitionProcess playsRole acquisitionProcess;
	acquisitions.AcquisitionProcessState playsRole acquisitionProcessStates {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemAcquisitionProcessState {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.AcquisitionProcessState playsRole acquisitionProcessStates {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemGenericLog {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	processes.GenericLog playsRole logs {
		multiplicity *;
	}
}

relation GenericLogUser {
	processes.GenericLog playsRole executionLogs {
		multiplicity *;
	}
	organization.Person playsRole executor;
}

relation GenericLogProcess {
	processes.GenericLog playsRole executionLogs {
		multiplicity *;
	}
	processes.GenericProcess playsRole process;
}

relation AcquisitionRequestRequestingUnit {
	acquisitions.AcquisitionRequest playsRole requests {
		multiplicity *;
	}
	organization.Unit playsRole requestingUnit;
}

relation AcquisitionRequestPayingUnit {
	acquisitions.AcquisitionRequest playsRole fundedRequests {
		multiplicity *;
	}
	organization.Unit playsRole payingUnits {
		multiplicity *;
	}
}

relation UnitItemUnit {
	organization.Unit playsRole unit;
	acquisitions.UnitItem playsRole unitItems {
		multiplicity *;
	}
}

relation ItemUnitItem {
	acquisitions.AcquisitionRequestItem playsRole item;
	acquisitions.UnitItem playsRole unitItems {
		multiplicity *;
	}
}