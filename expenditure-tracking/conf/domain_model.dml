package pt.ist.expenditureTrackingSystem.domain;


valueType org.joda.time.DateTime as DateTime;
valueType org.joda.time.LocalDate as LocalDate;

valueType pt.ist.expenditureTrackingSystem.domain.util.Address as Address;
valueType pt.ist.expenditureTrackingSystem.domain.util.ByteArray as ByteArray;
valueType pt.ist.expenditureTrackingSystem.domain.util.Money as Money;
valueType pt.utl.ist.fenix.tools.util.Strings as Strings;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.AcquisitionProcessStateType as AcquisitionProcessStateType;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.afterthefact.AfterTheFactAcquisitionType as AfterTheFactAcquisitionType;
enum pt.ist.expenditureTrackingSystem.domain.announcements.AnnouncementProcessStateType as AnnouncementProcessStateType;
enum pt.ist.expenditureTrackingSystem.domain.authorizations.AuthorizationType as AuthorizationType;
enum pt.ist.expenditureTrackingSystem.domain.requests.RequestForProposalProcessStateType as RequestForProposalProcessStateType;
enum pt.ist.expenditureTrackingSystem.domain.RoleType as RoleType;


class ExpenditureTrackingSystem {
	Integer acquisitionRequestDocumentCounter;
}


class acquisitions.Acquisition {
	String ojbConcreteClass;
}

	class acquisitions.afterthefact.AcquisitionAfterTheFact extends acquisitions.Acquisition {
		AfterTheFactAcquisitionType afterTheFactAcquisitionType;
		Money value;
		BigDecimal vatValue;
	}

	class acquisitions.AcquisitionRequest extends acquisitions.Acquisition {
		String paymentReference;
	}

class acquisitions.CPVReference {
	String code;
	String description;
}

class announcements.Announcement {
	String description;
	Money totalPrice;
	Integer executionDays;
	String executionAddress;
	String choiceCriteria;
	DateTime creationDate;
}

class acquisitions.AcquisitionProcessYear {
	Integer year;
	Integer counter;
}

class acquisitions.AcquisitionRequestItem {
	String description;
	Integer quantity;
	Money unitValue;
	BigDecimal vatValue;
	Money additionalCostValue;
	String proposalReference;
	String recipient;
	String recipientPhone;
	String recipientEmail;
	Address address;
	
	Integer realQuantity;
	BigDecimal realVatValue;
	Money realUnitValue;
	Money realAdditionalCostValue;
}

class acquisitions.UnitItem {
	Boolean submitedForFundsAllocation;
	Boolean itemApproved;
	Boolean invoiceConfirmed;
	Money shareValue;
	Money realShareValue;
}

class acquisitions.Financer {
	String ojbConcreteClass;
	String fundAllocationId;
	Strings effectiveFundAllocationId;
}

	class acquisitions.ProjectFinancer extends acquisitions.Financer {
		String projectFundAllocationId;
		Strings effectiveProjectFundAllocationId;
	}

class authorizations.Authorization {
	String ojbConcreteClass;
	AuthorizationType authorizationType;
	Boolean canDelegate;
	LocalDate startDate;
	LocalDate endDate;
	Money maxAmount;
	
}	

	class authorizations.DelegatedAuthorization extends authorizations.Authorization {
	}

class File {
	String ojbConcreteClass;
	String filename;
	ByteArray content;
	String contentType;
}

	class acquisitions.AcquisitionProposalDocument extends File {
		String proposalId;
	}

	class acquisitions.PurchaseOrderDocument extends File {
		String requestId;
	}
	
	class acquisitions.Invoice extends File {
		String invoiceNumber;
		LocalDate invoiceDate;
	}
	
	class CascadingStyleSheet extends File {
	}
	
	class requests.RequestForProposalDocument extends File {
	}
	
	class requests.SupplierProposalDocument extends File {
	}

class Options {
	Boolean displayAuthorizationPending;
	Boolean recurseAuthorizationPendingUnits;
	Boolean receiveNotificationsByEmail;
}

class organization.AccountingUnit {
	String name;
}

class organization.Person {
	String name;
	String username;
	String password;
}

class organization.DeliveryInfo {
	String recipient;
	Address address;
	String phone;
	String email;
}

class organization.Supplier {
	String name;
	String abbreviatedName;
	String fiscalIdentificationCode;
	Address address;
	String phone;
	String fax;
	String email;
	String nib;
}

class organization.Unit {
	String ojbConcreteClass;
	String name;
}

	class organization.CostCenter extends organization.Unit {
		String costCenter;
	}

	class organization.Project extends organization.Unit {
		String projectCode;
	}

	class organization.SubProject extends organization.Unit {
	}

class processes.GenericLog {
	String ojbConcreteClass;
	DateTime whenOperationWasRan;
	String operation;
}

	class acquisitions.OperationLog extends processes.GenericLog {
		AcquisitionProcessStateType state;
	}
	
	class requests.OperationLog extends processes.GenericLog {
		RequestForProposalProcessStateType state;
	}
	
	class announcements.OperationLog extends processes.GenericLog {
		AnnouncementProcessStateType state;
	}

class processes.GenericProcess {
	String ojbConcreteClass;
}

	class acquisitions.AcquisitionProcess extends processes.GenericProcess {
		LocalDate fundAllocationExpirationDate;
		Integer acquisitionProcessNumber;
	}

		class acquisitions.afterthefact.AfterTheFactAcquisitionProcess extends acquisitions.AcquisitionProcess {
		}

		class acquisitions.simplified.SimplifiedProcedureProcess extends acquisitions.AcquisitionProcess {
		}

		class acquisitions.direct.DirectContractProcess extends acquisitions.AcquisitionProcess {
		}

	class announcements.AnnouncementProcess extends processes.GenericProcess {
	}

	class requests.RequestForProposalProcess extends processes.GenericProcess {
	}

class ProcessState {
	String ojbConcreteClass;
	DateTime whenDateTime;
	String justification;
}
	
	class acquisitions.AcquisitionProcessState extends ProcessState {
		AcquisitionProcessStateType acquisitionProcessStateType;
	}

	class announcement.AnnouncementProcessState extends ProcessState {
		AnnouncementProcessStateType announcementProcessStateType;
	}

	class requests.RequestForProposalProcessState extends ProcessState {
		RequestForProposalProcessStateType requestForProposalProcessStateType;
	}

class processes.ProcessComment {
	String comment;
	DateTime date;
} 

class requests.RequestForProposal {
	String title;
	String description;
	LocalDate publishDate;
	LocalDate expireDate;
}

class Role {
	RoleType roleType;
}


relation ExpenditureTrackingSystemGenericProcess {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	processes.GenericProcess playsRole processes {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemAcquisition {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.Acquisition playsRole acquisitions {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemRequestForProposal {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	requests.RequestForProposal playsRole requestsForProposal {
		multiplicity *;
	}
}

relation AcquisitionProcessAcquisitionRequest {
	acquisitions.AcquisitionProcess playsRole acquisitionProcess;
	acquisitions.AcquisitionRequest playsRole acquisitionRequest;
}

relation RequestForProposalProcessRequestForProposal {
	requests.RequestForProposalProcess playsRole requestForProposalProcess;
	requests.RequestForProposal playsRole requestForProposal;
}

relation AnnouncementProcessAnnouncement {
	announcements.AnnouncementProcess playsRole announcementProcess;
	announcements.Announcement playsRole announcement;
}

relation ExpenditureTrackingSystemAcquisitionRequestItem {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.AcquisitionRequestItem playsRole acquisitionRequestItems {
		multiplicity *;
	}
}

relation AcquisitionRequestAcquisitionRequestItem {
	acquisitions.AcquisitionRequest playsRole acquisitionRequest;
	acquisitions.AcquisitionRequestItem playsRole acquisitionRequestItems {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemFile {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	File playsRole files {
		multiplicity *;
	}
}

relation RequestForProposalSupplierProposalDocument {
	requests.RequestForProposal playsRole requestForProposal;
	requests.SupplierProposalDocument playsRole supplierProposals {
		multiplicity *;
	}
}

relation RequestForProposalRequestForProposalDocument {
	requests.RequestForProposal playsRole requestForProposal;
	requests.RequestForProposalDocument playsRole requestForProposalDocument;
}

relation SupplierSupplierProposalDocument {
	organization.Supplier playsRole supplier;
	requests.SupplierProposalDocument playsRole proposals {
		multiplicity *;
	}
}

relation AcquisitionRequestAcquisitionProposalDocument {
	acquisitions.AcquisitionRequest playsRole acquisitionRequest;
	acquisitions.AcquisitionProposalDocument playsRole acquisitionProposalDocument;
}

relation AcquisitionRequestAcquisitionRequestDocument {
	acquisitions.AcquisitionRequest playsRole acquisitionRequest ;
	acquisitions.PurchaseOrderDocument playsRole purchaseOrderDocument;
}

relation AcquisitionInvoice {
	acquisitions.Acquisition playsRole acquisition;
	acquisitions.Invoice playsRole invoice;
}

relation ExpenditureTrackingSystemPerson {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.Person playsRole people {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemUnit {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.Unit playsRole units {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemTopLevelUnits {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemFromTopLevelUnit;
	organization.Unit playsRole topLevelUnits {
		multiplicity *;
	}
}

relation UnitUnit {
	organization.Unit playsRole parentUnit;
	organization.Unit playsRole subUnits {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemAuthorization {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	authorizations.Authorization playsRole authorizations {
		multiplicity *;
	}
}

relation UnitAuthorization {
	organization.Unit playsRole unit;
	authorizations.Authorization playsRole authorizations {
		multiplicity *;
	}
}

relation PersonAuthorization {
	organization.Person playsRole person;
	authorizations.Authorization playsRole authorizations {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemOptions {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	Options playsRole options {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemSuppliers {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.Supplier playsRole suppliers {
		multiplicity *;
	}
}

relation PersonOptions {
	organization.Person playsRole person;
	Options playsRole options;
}

relation ExpenditureTrackingSystemRole {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	Role playsRole roles {
		multiplicity *;
	}
}

relation PersonRole {
	organization.Person playsRole person {
		multiplicity *;
	}
	Role playsRole roles {
		multiplicity *;
	}
} 

relation AcquisitionRequestSupplier {
	acquisitions.AcquisitionRequest playsRole acquisitionRequests {
		multiplicity *;
	}
	organization.Supplier playsRole supplier;
}

relation AcquisitionRequestRequester {
	organization.Person playsRole requester;
	acquisitions.AcquisitionRequest playsRole acquisitionRequests {
		multiplicity *;
	}
}

relation RequestForProposalRequester {
	organization.Person playsRole requester;
	requests.RequestForProposal playsRole requestsForProposal {
		multiplicity *;
	}
}

relation ProcessStatePerson {
	organization.Person playsRole who;
	ProcessState playsRole processStates {
		multiplicity *;
	}
}

relation GenericProcessProcessState {
	processes.GenericProcess playsRole process;
	ProcessState playsRole processStates {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemProcessState {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	ProcessState playsRole processStates {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemGenericLog {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	processes.GenericLog playsRole logs {
		multiplicity *;
	}
}

relation GenericLogUser {
	processes.GenericLog playsRole executionLogs {
		multiplicity *;
	}
	organization.Person playsRole executor;
}

relation GenericLogProcess {
	processes.GenericLog playsRole executionLogs {
		multiplicity *;
	}
	processes.GenericProcess playsRole process;
}

relation RequestForProposalRequestingUnit {
	organization.Unit playsRole requestingUnit;
	requests.RequestForProposal playsRole requestsForProposal {
		multiplicity *;
	}
}

relation AcquisitionRequestRequestingUnit {
	acquisitions.AcquisitionRequest playsRole requests {
		multiplicity *;
	}
	organization.Unit playsRole requestingUnit;
}

relation AcquisitionRequestFinancer {
	acquisitions.AcquisitionRequest playsRole fundedRequest;
	acquisitions.Financer playsRole financers {
		multiplicity *;
	}
}

relation UnitItemFinancer {
	acquisitions.Financer playsRole financer;
	acquisitions.UnitItem playsRole unitItems {
		multiplicity *;
	}
}

relation UnitFinancer {
	acquisitions.Financer playsRole financedItems{
		multiplicity *;
	}
	organization.Unit playsRole unit;
}

relation ItemUnitItem {
	acquisitions.AcquisitionRequestItem playsRole item;
	acquisitions.UnitItem playsRole unitItems {
		multiplicity *;
	}
}

relation PersonDeliveryInfo {
	organization.Person playsRole person;
	organization.DeliveryInfo playsRole deliveryInfos {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemFinancer {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.Financer playsRole financers {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemDeliveryInfo {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.DeliveryInfo playsRole deliveryInfos {
		multiplicity *;
	}
}
relation ExpenditureTrackingSystemCPVReference {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.CPVReference playsRole cPVReferences {
		multiplicity *;
	}
}

relation AcquisitionRequestItemCPVReference {
	acquisitions.CPVReference playsRole cPVReference;
	acquisitions.AcquisitionRequestItem playsRole acquisitionRequestItems {
		multiplicity *;
	}
}

relation DelegatedAuthorizationAuthorization {
	authorizations.DelegatedAuthorization playsRole delegatedAuthorizations {
		multiplicity *;
	}	
	authorizations.Authorization playsRole authorization; 
}
relation AfterTheFactAcquisitionProcessAcquisitionAfterTheFact {
	acquisitions.afterthefact.AfterTheFactAcquisitionProcess playsRole afterTheFactAcquisitionProcess;
	acquisitions.afterthefact.AcquisitionAfterTheFact playsRole acquisitionAfterTheFact;
}

relation AcquisitionAfterTheFactSupplier {
	acquisitions.afterthefact.AcquisitionAfterTheFact playsRole acquisitionsAfterTheFact {
		multiplicity *;
	}
	organization.Supplier playsRole supplier;
}

relation ExpenditureTrackingSystemAnnouncement {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	announcements.Announcement playsRole announcements {
		multiplicity *;
	}
}

relation AnnoucementBuyingUnit {
	organization.Unit playsRole buyingUnit;
	announcements.Announcement playsRole buyAnnouncements {
		multiplicity *;
	}
}

relation AnnoucementRequestingUnit {
	organization.Unit playsRole requestingUnit;
	announcements.Announcement playsRole requestAnnouncements {
		multiplicity *;
	}
}

relation AnnouncementSupplier {
	announcements.Announcement playsRole announcements {
		multiplicity *;
	}
	organization.Supplier playsRole supplier;
}

relation AnnouncementPublisher {
	organization.Person playsRole publisher;
	announcements.Announcement playsRole announcements {
		multiplicity *;
	}
}

relation AnnouncementAcquisition {
	announcements.Announcement playsRole announcement;
	acquisitions.Acquisition playsRole acquisition;
}

relation OptionsCascadingStyleSheet {
	Options playsRole options;
	CascadingStyleSheet playsRole cascadingStyleSheet;
}

relation ExpenditureTrackingSystemAcquisitionProcessYear {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.AcquisitionProcessYear playsRole acquisitionProcessYears {
		multiplicity *;
	}
}

relation AcqusitionProcessAcquisitionProcessYear {
	acquisitions.AcquisitionProcess playsRole acquisitionProcesses {
		multiplicity *;
	} 
	acquisitions.AcquisitionProcessYear playsRole acquisitionProcessYear;
}

relation ExpenditureTrackingSystemAccountingUnit {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.AccountingUnit playsRole accountingUnits {
		multiplicity *;
	}
}

relation PersonAccountingUnit {
	organization.Person playsRole people {
		multiplicity *;
	}
	organization.AccountingUnit playsRole accountingUnits {
		multiplicity *;
	}
}

relation PersonProjectAccountingUnit {
	organization.Person playsRole projectAccountants {
		multiplicity *;
	}
	organization.AccountingUnit playsRole projectAccountingUnits {
		multiplicity *;
	}
}

relation UnitAccountingUnit {
	organization.Unit playsRole units {
		multiplicity *;
	}
	organization.AccountingUnit playsRole accountingUnit;
}

relation PersonComment {
	processes.ProcessComment playsRole comments {
		multiplicity *;
	}	
	organization.Person playsRole commenter;
}

relation GenericProcessComment {
	processes.ProcessComment playsRole comments {
		multiplicity *;
	}	
	processes.GenericProcess playsRole process;
}


relation ProcessCommentExpenditureTrackingSystem {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	processes.ProcessComment playsRole comments {
		multiplicity *;
	}
}