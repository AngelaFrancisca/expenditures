#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)
#
# Resources used by renderers
#
# labels for object slots use the following convention
#   1) the key specified for the slot in the used schema
#   2) label.package.object.slotName
#   3) label.slotName
#   4) slotName
#
# If none of the keys is found then the default bundle for the module is searched.
# When the key is not found the programatic slot name is used.
#

FALSE = Não

#
# Boolean
#
TRUE = Sim

datetime.out.of.range = A data encontra-se fora da gama suportada.

error.country.cannot.be.empty = O País não pode ser vazio
#
#	Address
#
error.line1.cannot.be.empty = A Linha 1 não pode ser vazia
error.location.cannot.be.empty = O Local não pode ser vazio
error.postalCode.cannot.be.empty = O Código Postal não pode ser vazio

fenix.renderers.autocomplete.error = Não foi possível obter a lista de sugestões do servidor
fenix.renderers.autocomplete.loading = A carregar...
fenix.renderers.converter.dateTime.convert = Não foi possível converter "{0} {1}:{2}" para uma data
fenix.renderers.converter.dateTime.incomplete = Para introduzir a hora "{0}:{1}" necessita de especificar uma data  
fenix.renderers.converter.dateTime.invalid = A data "{0}" é uma data inválida
fenix.renderers.converter.grade.invalid = A cotação é inválida
fenix.renderers.converter.partial = Não foi possível converter "{0}" para uma data
fenix.renderers.converter.timeOfDay = Não foi possível converter "{0}" para uma hora
fenix.renderers.dataPicker.image.title = Aceder a calendário para introdução de data
fenix.renderers.length.exceeded.character = O texto excede os {0} caracters permitidos
fenix.renderers.length.exceeded.word = O texto excede as {0} palavras permitidas
fenix.renderers.organigram.date.from = De
fenix.renderers.organigram.date.since = Desde
fenix.renderers.organigram.date.to = até
fenix.renderers.organigram.employees = Funcionários
fenix.renderers.organigram.function.implicit = Cargo Inerente

label.EUR = &euro;

renderers.checkboxlist.selectAll = Todos
#
# Actions
#
renderers.convert.error = Não foi possivel converter o valor dado
renderers.converter.bigdecimal = Não foi possível converter "{0}" para um número
renderers.converter.date = Não foi possível converter "{0}" para uma data 
renderers.converter.double = Não foi possível converter "{0}" para um decimal
renderers.converter.file.obtain = Não foi possivel obter o ficheiro enviado
renderers.converter.float = Não foi possível converter "{0}" para um número decimal
renderers.converter.integer = Não foi possível converter "{0}" para um número inteiro
renderers.converter.long = Não foi possível converter "{0}" para um número inteiro
renderers.converter.money = Não foi possível converter "{0}" para um montante válido 
renderers.converter.short = Não foi possível converter "{0}" para um número inteiro
#
# Converter
#
renderers.converter.time = Não foi possível converter "{0}" para uma hora
renderers.form.add.name = Adicionar
renderers.form.cancel.name = Cancelar
renderers.form.submit.name = Submeter
renderers.label.tags.are.space.separated = As tags devem ser separadas por espaços.
renderers.language.add = Adicionar nova língua
renderers.language.remove = Remover
renderers.list.management.add = Adicionar
renderers.list.management.delete = Remover
renderers.menu.default.title = -- Escolha uma opção --
renderers.menu.other.title = Outra
renderers.rich-text.editor.add = Com editor
renderers.rich-text.editor.remove = Sem editor
renderers.show.all = Mostrar todos
#
# Components
#
renderers.table.selectAll = Selecionar Todos
renderers.validator.advancedDate.pastOrToday = A data introduzida tem que ser anterior ou igual à actual 
renderers.validator.autoComplete.required = Por favor, escolha um item
renderers.validator.date = Data inválida
renderers.validator.dateInExecutionPeriod.notInExecutionPeriod = A data introduzida tem que estar contida num Período de Execução
renderers.validator.dateTime.beforeNow = A data especificada é no passado
renderers.validator.dateTime.incomplete = Também tem que preencher a data
renderers.validator.dateTime.invalid = A data introduzida é invalida
renderers.validator.dateTime.notInRange = Os valores da hora estão fora do intervalo 0-23 para a hora e 0-59 para os minutos 
renderers.validator.dateTime.notNumbers = Os valores da hora têm que ser números
renderers.validator.dateTime.required = A data é necessária
renderers.validator.degree.id.card.name = O nome do curso a apresentar no cartão não pode exceder 42 caracteres.
renderers.validator.email = O email introduzido não é válido
renderers.validator.file.extension = O ficheiro tem que ter uma das seguintes extensões: {0}
renderers.validator.file.size = O tamanho máximo de {0} bytes ({1}) para o ficheiro foi excedido 
renderers.validator.file.type = O ficheiro tem que ter um dos seguintes tipos: {0}
renderers.validator.grade = A nota "{0}" é inválida
renderers.validator.grade.invalid.grade.value = A nota {0} é inválida para a escala {1}
renderers.validator.grade.no.grade.scale = Tem que escolher uma escala de Notas
renderers.validator.invalid.length = Tamanho inválido
renderers.validator.issn = O formato do ISSN é inválido
renderers.validator.language.null = Falta seleccionar a língua
renderers.validator.language.repeated = Não pode ter duas entradas na mesma língua
renderers.validator.language.required = Campo obrigatório
renderers.validator.ministry.code = O código do ministério tem que ser um número de quatro digitos
renderers.validator.number = O valor tem que ser um número
renderers.validator.number.integer = O valor tem que ser um número inteiro
renderers.validator.number.range.both = O número deve estar entre {0} e {1}
renderers.validator.number.range.lower = O número deve ser maior ou igual a {0}
renderers.validator.number.range.upper = O número deve ser menor ou igual a {0}
renderers.validator.optional.mark = <span class="optionalfield">(optional)</span>
renderers.validator.regexp = O valor do campo não respeita a expressão regular <code>{0}</code>
renderers.validator.required = Campo obrigatório
renderers.validator.required.mark = <span class="required">*</span>
# 
# Validators
#
renderers.validator.required.mark.explanation = Campos marcados com (*) são obrigatórios
renderers.validator.url = O url não é válido
