package module.internalBilling.domain;


class InternalBillingSystem {
}

class Operator {
	String name;
	String fiscalIdentificationNumber;
}

class Account {
	String number;
	String description;
}

class BillableThing {
	String identifier;
	Money maxBillableValue;
}

	class TelecomService extends BillableThing {
	}

class TelecomServiceType {
	String name;
	String description;
}

class Beneficiary {
	String name;
}

	class PersonBeneficiary extends Beneficiary {
	}

class Invoice {
	String number;
	Interval interval;
	LocalDate invoiceDate;
	LocalDate paymentLimit;
}

class InvoiceEntry {
	Money value;
	Boolean verified;
	String contestment;
}

class OperationLog {
	String description;
}

	class BillableThingLog {
	}

	class OperatorLog {
	}

relation VirtualHostInternalBillingSystem {
	.pt.ist.bennu.core.domain.VirtualHost playsRole virtualHost {
		multiplicity 1..1;
	}
	InternalBillingSystem playsRole internalBillingSystem;
}

relation InternalBillingSystemOperator {
	InternalBillingSystem playsRole internalBillingSystem {
		multiplicity 1..1;
	}
	Operator playsRole operator {
		multiplicity *;
	}
}

relation OperatorAccount {
	Operator playsRole operator {
		multiplicity 1..1;
	}
	Account playsRole account {
		multiplicity *;
	}
}

relation InternalBillingSystemEquipment {
	InternalBillingSystem playsRole internalBillingSystem {
		multiplicity 1..1;
	}
	BillableThing playsRole billableThing {
		multiplicity *;
	}
}

relation AccountBillableThing {
	Account playsRole account;
	BillableThing playsRole billableThing {
		multiplicity *;
	}
}

relation InternalBillingSystemTelecomServiceType {
	InternalBillingSystem playsRole internalBillingSystem {
		multiplicity 1..1;
	}
	TelecomServiceType playsRole telecomServiceType {
		multiplicity *;
	}
}

relation TelecomServiceTypeTelecomService {
	TelecomServiceType playsRole telecomServiceType {
		multiplicity 1..1;
	}
	TelecomService playsRole telecomService {
		multiplicity *;
	}
}

relation BillableThingFinancer {
	BillableThing playsRole billableThing {
		multiplicity *;
	}
	.pt.ist.expenditureTrackingSystem.domain.organization.Unit playsRole financer;
}

relation BillableThingBeneficiary {
	BillableThing playsRole billableThing {
		multiplicity *;
	}
	Beneficiary playsRole beneficiary;
}

relation PersonBeneficiaryPerson {
	PersonBeneficiary playsRole beneficiary;
	.pt.ist.expenditureTrackingSystem.domain.organization.Person playsRole person {
		multiplicity 1..1;
	}
}

relation AccountInvoice {
	Account playsRole account {
		multiplicity 1..1;
	}
	Invoice playsRole invoice {
		multiplicity *;
	}
}

relation InvoiceEntryInvoice {
	InvoiceEntry playsRole invoiceEntry {
		multiplicity *;
	}
	Invoice playsRole invoice {
		multiplicity 1..1;
	}
}

relation InvoiceEntryBillableThing {
	InvoiceEntry playsRole invoiceEntry {
		multiplicity *;
	}
	BillableThing playsRole billableThing {
		multiplicity 1..1;
	}
}

relation OperationLogPerson {
	OperationLog playsRole internalBillingOperationLog {
		multiplicity *;
	}
	.pt.ist.expenditureTrackingSystem.domain.organization.Person playsRole person {
		multiplicity 1..1;
	}
}

relation BillableThingLogBillableThing {
	BillableThingLog playsRole billableThingLog {
		multiplicity *;
	}
	BillableThing playsRole billableThing {
		multiplicity 1..1;
	}
}

relation OperatorLogOperator {
	OperatorLog playsRole operatorLog {
		multiplicity *;
	}
	Operator playsRole operator {
		multiplicity 1..1;
	}
}
